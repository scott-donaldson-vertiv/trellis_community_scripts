#!/bin/bash

### BEGIN INIT INFO
# Provides:          trellis_custom_ssh
# Required-Start:    $trellis_custom_iptables $network $NAMEd
# Required-Stop:     $trellis_custom_iptables
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable SSH tunnelling for Trellis Enteprise services.
### END INIT INFO


#---------------------------------------------------------------------------------------------
# Script Name: Custom SSH Tunneling
# Created: 2018/07/02
# Author:  Scott Donaldson [NETPWR/AVOCENT/UK]
# Contributors: Scott Donaldson [NETPWR/AVOCENT/UK], Mark Zagorski [NETPWR/AVOCENT/UK]
# Company: Vertiv Infrastructure Ltd.
# Group: Professional Services
# Email:
#---------------------------------------------------------------------------------------------

if [ -f /etc/init.d/functions ] ; then
  . /etc/init.d/functions
elif [ -f /etc/rc.d/init.d/functions ] ; then
  . /etc/rc.d/init.d/functions
else
  exit 0
fi

NAME="trellis_custom_ssh"
 
# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

EXEC="bash -c exec"
CONFIG_FILE=/etc/default/$NAME.conf

test -x $SSH_BIN || { 
  echo "Error: SSH not present."
  if ["$1" = "stop" ]; then 
    exit 0;
  else
    exit 5;
  fi
}

test -r $CONFIG_FILE || {
  echo "Error: Configuration file unreadable."
  if [ "$1" = "stop" ]; then
    exit 0;
  else
    exit 6;
  fi;
}

# Read Configuration File
. $CONFIG_FILE

if [ "`id -u`" = "0" ]; then
    EXEC="su - oracle --session-command exec"
elif [ "`id -nu`" != "${SSH_USER}" ]; then
    echo -n $"Failed to execute ${name} start script. Invalid user `id -nu`."
    exit 255
fi

#
#  AES GCM/CTR are preferable, however without AES-NI suppport they are slower 
#  than ARCFOUR. Check selected cipher and downgrade in absence of AES-NI if 
#  downgrade is enabled.
#
if [[ $SSH_CIPHER = *"aes"* ]]; then
  if [ $SSH_CIPHER_ALLOW_DOWNGRADE = "yes" ]; then
    if [ "`grep -m 1 -o -i '\sAES\s' /proc/cpuinfo | grep -o -i AES`" != "aes" ]; then
      SSH_CIPHER=arcfour256
	fi
  fi
fi  

case $1 in
  start)
    shift
	logger -s "Starting Trellis Enterprise Custom SSH Tunnels"
    daemon --user="$SSH_USER" --pidfile="$PIDFILE" "$SSH_BIN -M $SSH_MONITOR_PORT \
										-fN $SSH_USER@trellis-back \
										-i ~/.ssh/id_rsa -c $SSH_CIPHER $SSH_OPTIONS \
                                        -L 11521:trellis-back:1521 \
										-L 17021:trellis-back:7021 \
										-L 17024:trellis-back:7024 \
										-L 17026:trellis-back:7026 \
										-L 18080:trellis-back:8080"
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
      #touch $lockfile
      ps aux | grep $SSH_BIN | grep 1521 | grep -v grep | tr -s " " | cut -d " " -f2 > $PIDFILE
    fi
	success
	echo
    ;;

  stop)
	PID=`pidofproc -p ${PIDFILE} ${SSH_BIN}`
	## if PID valid run shutdown.sh
	if [ -z ${PID} ];then
		logger -s "${NAME} is not running."
		exit;
	fi
		
    if [ ${PID} -gt 0 ]; then
	  logger -s "Stopping Trellis Enterprise Custom SSH Tunnels"
      /bin/su -l ${SSH_USER} -c "kill -9 $PID "
      RETVAL=$?
      #[ $RETVAL = 0 ] && rm -f ${LOCKFILE}
      [ $RETVAL = 0 ] && rm -f ${PIDFILE}
	fi
    
    ;;
  restart)
    logger -s "Restarting Trellis Enterprise Custom SSH Tunnels"
    $0 stop
    $0 start
    status $NAME
    ;;
	
  status)
    status -p ${PIDFILE}
	RETVAL=$?
    ;;
	
  *)
    $0 usage
    ;;
  usage)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;

esac

exit 0
